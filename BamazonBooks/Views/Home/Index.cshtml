@{
    ViewData["Title"] = "Home Page";
}

@model BookListViewModel
<!--//IQueryable<Book>-->
<!--the model expression at the top of the file specifies that the view expects to recieve a sequence of Books objects from the action method as its model data-->

<header align="center">
    <h1>Available Books</h1>
</header>

<div class="row justify-content-center">
    <div class="col-auto bg-light">
        <table class="table table-responsive table-dark table-striped"> <!-- this tabledark bootstrap AND table-striped element are something new that I tried out-->
            <thead>
                <tr><th>#</th><th>Title</th><th>Author Given Name</th><th>Author Middle Initial</th><th>Author Last Name</th><th>Publisher</th><th>ISBN</th><th>Classification</th><th>Category</th><th>Price</th><th># of Pages</th></tr>
            </thead>

            <tbody>
                @foreach (var x in Model.Books) //the view just deals with how details of each Book object is displayed in html
                {
                    <partial name="BookSummary" model="x" /> // just another way to organize your program
                    @*<tr>
                        <td>@x.BookId</td>
                        <td>@x.Title</td>
                        <td>@x.AuthorGivenName</td>
                        <td>@x.AuthorMiddleInitial</td>
                        <td>@x.AuthorLastName</td>
                        <td>@x.Publisher</td>
                        <td>@x.ISBN</td>
                        <td>@x.Classification</td>
                        <td>@x.Category</td>
                        <td>$@x.Price</td>
                        <td>@x.NumPages</td>
                    </tr>*@
                    //I call the partial view using a partial element, using the name and model attributes to specify the name of the partial view and its view model. 
                    //Using a partial view allows the same markup to be inserted into any view that needs to display a summary of a product.

                }
            </tbody>
        </table>
        
    </div>
</div>
<div page-model="@Model.PagingInfo" page-action="Index" 
     page-classes-enabled="true" 
     page-class="btn"
     page-class-normal="btn-outline-dark" 
     page-class-selected="btn-primary"
     page-url-category="@Model.CurrentCategory"
     class="btn-group pull-right m-1"></div> <!--All of the code here is new bootstrap that I have never used-->